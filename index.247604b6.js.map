{"mappings":"AACAA,eAAeC,EAASC,GACtB,IACE,MAAMC,QAAiBC,MAAMF,EAAK,CAChCG,QAAS,CACP,YALQ,2EAQZ,IAAKF,EAASG,GACZ,MAAM,IAAIC,MAAM,kBAGlB,aADmBJ,EAASK,M,CAE5B,MAAOC,GACP,MAAM,IAAIF,MAAM,iB,EAKAP,eAALU,IAEb,IAEE,aADqBT,EAFX,sC,CAIV,MAAOQ,GACP,MAAM,IAAIF,MAAM,yB,EAKpBP,eAAeW,EAAgBC,GAC7B,MAAMV,EAAM,wDAAwDU,IACpE,IACE,MAAOC,SAAaZ,EAASC,GAC7B,OAAOW,C,CACP,MAAOJ,GACP,MAAM,IAAIF,MAAM,+B,EClCpB,MAAMO,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAChCE,EAAQH,SAASC,cAAc,UAC/BG,EAAUJ,SAASC,cAAc,aAGYD,SAA1CK,iBAAiB,oBAAoB,KAC5CH,EAAOI,MAAMC,QAAU,QACvBR,EAAYO,MAAMC,QAAU,OAC5BJ,EAAMG,MAAMC,QAAU,OACtBH,EAAQE,MAAMC,QAAU,OAExBZ,IACGa,MAAKC,IACJA,EAAOC,SAAQC,IACb,MAAMC,EAASZ,SAASa,cAAc,UACtCD,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3BlB,EAAYmB,YAAYN,EAAO,IAGjCV,EAAOI,MAAMC,QAAU,OACvBR,EAAYO,MAAMC,QAAU,OAAO,IAEpCY,OAAM,KACLjB,EAAOI,MAAMC,QAAU,OACvBJ,EAAMG,MAAMC,QAAU,OAAO,GAC7B,IAINR,EAAYM,iBAAiB,UAAU,KACrC,MAAMe,EAAkBrB,EAAYe,MAEpCZ,EAAOI,MAAMC,QAAU,QACvBJ,EAAMG,MAAMC,QAAU,OACtBH,EAAQE,MAAMC,QAAU,OAExBX,EAAgBwB,GACbZ,MAAKV,IACJM,EAAQiB,UAAY,uBACNvB,EAAIX,wCACVW,EAAIW,OAAO,GAAGQ,yBACfnB,EAAIW,OAAO,GAAGa,4CACDxB,EAAIW,OAAO,GAAGc,0BAGlCrB,EAAOI,MAAMC,QAAU,OACvBH,EAAQE,MAAMC,QAAU,OAAO,IAEhCY,OAAM,KACLjB,EAAOI,MAAMC,QAAU,OACvBJ,EAAMG,MAAMC,QAAU,OAAO,GAC7B","sources":["src/js/cat-api.js","src/js/index.js"],"sourcesContent":["const API_KEY = 'live_3vXQRfUY7Uxv5L96slToGHu6zIfgjnAXXRObjq7ntvAChfIy5RUhuKQSotYEUw7t'; \nasync function fetchApi(url) {\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'x-api-key': API_KEY,\n      },\n    });\n    if (!response.ok) {\n      throw new Error('Request failed');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Request failed');\n  }\n}\n\n// Получение списка пород\nasync function fetchBreeds() {\n  const url = 'https://api.thecatapi.com/v1/breeds';\n  try {\n    const breeds = await fetchApi(url);\n    return breeds;\n  } catch (error) {\n    throw new Error('Failed to fetch breeds');\n  }\n}\n\n// Получение информации о коте по породе\nasync function fetchCatByBreed(breedId) {\n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n  try {\n    const [cat] = await fetchApi(url);\n    return cat;\n  } catch (error) {\n    throw new Error('Failed to fetch cat by breed');\n  }\n}\n\nexport { fetchBreeds, fetchCatByBreed };","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\nconst catInfo = document.querySelector('.cat-info');\n\n// При загрузке страницы выполняем запрос за коллекцией пород\ndocument.addEventListener('DOMContentLoaded', () => {\n  loader.style.display = 'block';\n  breedSelect.style.display = 'none';\n  error.style.display = 'none';\n  catInfo.style.display = 'none';\n\n  fetchBreeds()\n    .then(breeds => {\n      breeds.forEach(breed => {\n        const option = document.createElement('option');\n        option.value = breed.id;\n        option.textContent = breed.name;\n        breedSelect.appendChild(option);\n      });\n\n      loader.style.display = 'none';\n      breedSelect.style.display = 'block';\n    })\n    .catch(() => {\n      loader.style.display = 'none';\n      error.style.display = 'block';\n    });\n});\n\n// Обработчик изменения выбора породы\nbreedSelect.addEventListener('change', () => {\n  const selectedBreedId = breedSelect.value;\n\n  loader.style.display = 'block';\n  error.style.display = 'none';\n  catInfo.style.display = 'none';\n\n  fetchCatByBreed(selectedBreedId)\n    .then(cat => {\n      catInfo.innerHTML = `\n        <img src=\"${cat.url}\" alt=\"Cat Image\" />\n        <h2>${cat.breeds[0].name}</h2>\n        <p>${cat.breeds[0].description}</p>\n        <p>Temperament: ${cat.breeds[0].temperament}</p>\n      `;\n\n      loader.style.display = 'none';\n      catInfo.style.display = 'block';\n    })\n    .catch(() => {\n      loader.style.display = 'none';\n      error.style.display = 'block';\n    });\n});"],"names":["async","$c4ebbd28ee7007ee$var$fetchApi","url","response","fetch","headers","ok","Error","json","error","$c4ebbd28ee7007ee$export$913382e0b15b5503","$c4ebbd28ee7007ee$export$57b7d3a597416aa2","breedId","cat","$85a5f86b715fe7db$var$breedSelect","document","querySelector","$85a5f86b715fe7db$var$loader","$85a5f86b715fe7db$var$error","$85a5f86b715fe7db$var$catInfo","addEventListener","style","display","then","breeds","forEach","breed","option","createElement","value","id","textContent","name","appendChild","catch","selectedBreedId","innerHTML","description","temperament"],"version":3,"file":"index.247604b6.js.map"}